{"version":3,"sources":["icons/animated/day.svg","icons/animated/night.svg","icons/animated/cloudy-day-1.svg","icons/animated/cloudy-day-2.svg","icons/animated/cloudy-day-3.svg","icons/animated/cloudy-night-1.svg","icons/animated/cloudy-night-2.svg","icons/animated/cloudy-night-3.svg","icons/animated/cloudy.svg","icons/animated/rainy-1.svg","icons/animated/rainy-2.svg","icons/animated/rainy-4.svg","icons/animated/rainy-6.svg","icons/animated/rainy-7.svg","icons/animated/thunder.svg","icons/animated/snowy-1.svg","icons/animated/snowy-2.svg","icons/animated/snowy-3.svg","icons/animated/snowy-4.svg","icons/animated/snowy-5.svg","icons/animated/snowy-6.svg","components/MenuNav.jsx","components/DayComp.jsx","components/Home.jsx","components/Favorites.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuNav","props","className","to","type","onChange","UpdateTempValue","DayComp","useState","isDay","setIsDay","getIcon","IconValue","src","dayIcon","alt","cloudyDay1Icon","cloudyDay2Icon","cloudyDay3Icon","cloudyIcon","rainy4Icon","rainy2Icon","rainy1Icon","thunderIcon","rainy6Icon","snowy4Icon","snowy2Icon","snowy1Icon","snowy6Icon","snowy3Icon","snowy5Icon","rainy7Icon","nightIcon","cloudyNight1Icon","cloudyNight2Icon","cloudyNight3Icon","toggleTemperature","value","TempUnit","parseInt","toggleTemperatureUnit","date","day","Date","toDateString","convertToDateString","self","Math","floor","Temperature","Minimum","Value","Maximum","Day","ShortPhrase","Icon","Rain","Unit","Snow","Night","ApiKey","Home","inputValue","setInputValue","tempCities","setTempCities","tempSelectedCity","setTempSelectedCity","tempCityKey","setTempCityKey","e","a","searchValue","target","fetch","AutoCompleteAPI","json","autoComplete","status","Message","console","error","handleBackgroundColor","TemperatureValue","undefined","document","documentElement","style","setProperty","toggleFavorite","UpdateFavorites","City","Key","placeholder","onClick","alert","preventDefault","UpdateResult","submitCity","length","map","data","index","LocalizedName","Country","handleAutocComplete","key","AdministrativeArea","showAutoComplete","statusText","CityCurrentData","Metric","favoriteCities","findIndex","object","selectedCity","WeatherText","City5DayCast","DailyForecasts","show","Favorites","cities","CityInfo","SendCity","DateString","cityData","LocalObservationDateTime","App","firstRender","setFirstRender","fetchResult","setFetchResult","setCityData","cityForecastData","setCityForecastData","isCelsuis","setIsCelsuis","Type","ID","setSelectedCity","favorites","setFavorites","getSpecific","cityInfo","cityKey","CityDataApi","CityForecastApi","CityForecast","showDefault","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","CityGeolocationApi","CityGeolocationAddress","UpdateFavoriteCities","CityAddressKey","temp","filter","i","openFavoriteCity","FavoriteCity","onLoad","getDefault","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.dbc9a004.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/day.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/night.a3f3f38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day-1.80a5d865.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day-2.b931d84d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day-3.109368f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night-1.7e65840b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night-2.ef1c6aa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night-3.bf91ac0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-1.f134a51c.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-2.35eb268d.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-4.c8cdb216.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-6.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-7.c915395f.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-1.f78cba60.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-2.d103c77c.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-3.b6eea2cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-4.474b6da7.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-5.3def7c9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-6.67d63a14.svg\";","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function MenuNav(props) {\r\n\r\n    function toggleTempValue(){\r\n        props.UpdateTempValue()\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <h2 className=\"nav-title\">My Weather</h2>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/\"><li>Home</li></Link>\r\n                <Link to=\"/favorites\"><li>Favorites</li></Link>\r\n                <li>\r\n                    <div className=\"button\">\r\n                        <input type=\"checkbox\" className=\"checkbox\" onChange={toggleTempValue}/>\r\n                        <div className=\"knobs\"></div>\r\n                        <div className=\"layer\"></div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport dayIcon from '../icons/animated/day.svg'\r\nimport nightIcon from '../icons/animated/night.svg'\r\nimport cloudyDay1Icon from '../icons/animated/cloudy-day-1.svg'\r\nimport cloudyDay2Icon from '../icons/animated/cloudy-day-2.svg'\r\nimport cloudyDay3Icon from '../icons/animated/cloudy-day-3.svg'\r\nimport cloudyNight1Icon from '../icons/animated/cloudy-night-1.svg'\r\nimport cloudyNight2Icon from '../icons/animated/cloudy-night-2.svg'\r\nimport cloudyNight3Icon from '../icons/animated/cloudy-night-3.svg'\r\nimport cloudyIcon from '../icons/animated/cloudy.svg'\r\nimport rainy1Icon from '../icons/animated/rainy-1.svg'\r\nimport rainy2Icon from '../icons/animated/rainy-2.svg'\r\nimport rainy4Icon from '../icons/animated/rainy-4.svg'\r\nimport rainy6Icon from '../icons/animated/rainy-6.svg'\r\nimport rainy7Icon from '../icons/animated/rainy-7.svg'\r\nimport thunderIcon from '../icons/animated/thunder.svg'\r\nimport snowy1Icon from '../icons/animated/snowy-1.svg'\r\nimport snowy2Icon from '../icons/animated/snowy-2.svg'\r\nimport snowy3Icon from '../icons/animated/snowy-3.svg'\r\nimport snowy4Icon from '../icons/animated/snowy-4.svg'\r\nimport snowy5Icon from '../icons/animated/snowy-5.svg'\r\nimport snowy6Icon from '../icons/animated/snowy-6.svg'\r\n\r\nexport default function DayComp(props) {\r\n    const [isDay, setIsDay] = useState(true)\r\n    \r\n    function getIcon(IconValue){\r\n        if(IconValue===1||IconValue===2){\r\n            return <img className=\"weather-icon\" src={dayIcon} alt=\"sun Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===3){\r\n            return <img className=\"weather-icon\" src={cloudyDay1Icon} alt=\"cloudy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===4){\r\n            return <img className=\"weather-icon\" src={cloudyDay2Icon} alt=\"cloudy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===5||IconValue===6){\r\n            return <img className=\"weather-icon\" src={cloudyDay3Icon} alt=\"cloudy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===7||IconValue===8||IconValue===11||IconValue===30||IconValue===31||IconValue===32){\r\n            return <img className=\"weather-icon\" src={cloudyIcon} alt=\"cloudy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===12||IconValue===39||IconValue===40){\r\n            return <img className=\"weather-icon\" src={rainy4Icon} alt=\"rainy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===13){\r\n            return <img className=\"weather-icon\" src={rainy2Icon} alt=\"rainy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===14){\r\n            return <img className=\"weather-icon\" src={rainy1Icon} alt=\"rainy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===15||IconValue===16||IconValue===17||IconValue===41||IconValue===42){\r\n            return <img className=\"weather-icon\" src={thunderIcon} alt=\"thunder Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===18||IconValue===25){\r\n            return <img className=\"weather-icon\" src={rainy6Icon} alt=\"rainy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===19||IconValue===43){\r\n            return <img className=\"weather-icon\" src={snowy4Icon} alt=\"snowy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===20){\r\n            return <img className=\"weather-icon\" src={snowy2Icon} alt=\"snowy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===21){\r\n            return <img className=\"weather-icon\" src={snowy1Icon} alt=\"snowy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===22){\r\n            return <img className=\"weather-icon\" src={snowy6Icon} alt=\"snowy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===23){\r\n            return <img className=\"weather-icon\" src={snowy3Icon} alt=\"snowy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===24||IconValue===44){\r\n            return <img className=\"weather-icon\" src={snowy5Icon} alt=\"snowy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===25||IconValue===29){\r\n            return <img className=\"weather-icon\" src={rainy7Icon} alt=\"rainy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===33||IconValue===34){\r\n            return <img className=\"weather-icon\" src={nightIcon} alt=\"moon Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===35){\r\n            return <img className=\"weather-icon\" src={cloudyNight1Icon} alt=\"cloudy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===36){\r\n            return <img className=\"weather-icon\" src={cloudyNight2Icon} alt=\"cloudy Icon by AmCharts\"/>\r\n        }\r\n        else if(IconValue===37||IconValue===38){\r\n            return <img className=\"weather-icon\" src={cloudyNight3Icon} alt=\"cloudy Icon by AmCharts\"/>\r\n        }\r\n    }\r\n\r\n    function toggleTemperature(value){\r\n        if(props.TempUnit){\r\n            return value\r\n        }\r\n        else{\r\n            return (parseInt(value)*1.8+32)\r\n        }\r\n    }\r\n\r\n    function toggleTemperatureUnit(){\r\n        if(props.TempUnit){\r\n            return \"C\"\r\n        }\r\n        else{\r\n            return \"F\"\r\n        }\r\n    }\r\n\r\n    function convertToDateString(date){\r\n        const day = new Date(date)\r\n        return <span className=\"Bigger\">{day.toDateString()}</span>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Daily\">\r\n            <div className=\"Forecast-Header\">\r\n                <div className=\"space-between\">\r\n                    {convertToDateString(props.self.Date)}\r\n                    <div className=\"button-toggle\">\r\n                        <input type=\"checkbox\" className=\"weather-checkbox\" onChange={()=>{setIsDay(!isDay)}}/>\r\n                        <div className=\"weather-knobs\"></div>\r\n                        <div className=\"weather-layer\"></div>\r\n                    </div>\r\n                </div>\r\n                <p className=\"indent\">{Math.floor(toggleTemperature(props.self.Temperature.Minimum.Value))+toggleTemperatureUnit()} - {Math.floor(toggleTemperature(props.self.Temperature.Maximum.Value))+toggleTemperatureUnit()}</p>\r\n            </div>\r\n            {isDay? <div className=\"Forecast-Content\">\r\n                <div className=\"Center\">\r\n                    <span className=\"Bigger\">{props.self.Day.ShortPhrase}</span>\r\n                    {getIcon(props.self.Day.Icon)}\r\n                </div>\r\n                <div className=\"space-evenly\">\r\n                    <p>Rain: {props.self.Day.Rain.Value} {props.self.Day.Rain.Unit}</p>\r\n                    <p>Snow: {props.self.Day.Snow.Value} {props.self.Day.Snow.Unit}</p>\r\n                </div>\r\n            </div> : <div className=\"Forecast-Content\">\r\n                <div className=\"Center\">\r\n                    <span className=\"Bigger\">{props.self.Night.ShortPhrase}</span>\r\n                    {getIcon(props.self.Night.Icon)}\r\n                </div>\r\n                <div className=\"space-evenly\">\r\n                    <p>Rain: {props.self.Night.Rain.Value} {props.self.Night.Rain.Unit}</p>\r\n                    <p>Snow: {props.self.Night.Snow.Value} {props.self.Night.Snow.Unit}</p>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport DayComp from './DayComp'\r\nconst ApiKey = \"c1Ovp4IqKAag4Md99AAiQJlwAdHhNxmC\"\r\n\r\nexport default function Home(props) {\r\n    const [inputValue,setInputValue]=useState('')\r\n    const [tempCities,setTempCities]=useState(\"\")\r\n    const [tempSelectedCity,setTempSelectedCity]=useState()\r\n    const [tempCityKey,setTempCityKey]=useState()\r\n\r\n    async function getCitiesFromAPI(e){\r\n        const searchValue = e.target.value;\r\n        if(searchValue<\"A\"||searchValue>\"z\"){\r\n            setInputValue('') \r\n            setTempCities(\"\")            \r\n        }\r\n        else{\r\n            setInputValue(searchValue)\r\n            const AutoCompleteAPI = await \r\n            fetch (`https://cors-anywhere.herokuapp.com/http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${ApiKey}&q=${searchValue}&language=en-us`)\r\n            const autoComplete = await AutoCompleteAPI.json();\r\n\r\n            if(AutoCompleteAPI.status===200){\r\n                setTempCities(autoComplete)\r\n            }\r\n            else{\r\n                setTempCities(autoComplete.Message) \r\n                console.error(autoComplete.Message)\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleBackgroundColor(TemperatureValue){\r\n        if(TemperatureValue===undefined){\r\n            document.documentElement.style.setProperty(\"--back_x\", \"#b8b7b8\");\r\n            document.documentElement.style.setProperty(\"--back_y\", \"#eef2f3\");\r\n        }\r\n        else if(TemperatureValue<=0){\r\n          document.documentElement.style.setProperty(\"--back_x\", \"#acb6e5\");\r\n          document.documentElement.style.setProperty(\"--back_y\", \"#86fde8\");\r\n        }\r\n        else if(TemperatureValue>=0.1&&TemperatureValue<=19.9){\r\n          document.documentElement.style.setProperty(\"--back_x\", \"#83a4d4\");\r\n          document.documentElement.style.setProperty(\"--back_y\", \"#b6fbff\");\r\n        }\r\n        else if(TemperatureValue>=20&&TemperatureValue<=27.9){\r\n          document.documentElement.style.setProperty(\"--back_x\", \"#ed4264\");\r\n          document.documentElement.style.setProperty(\"--back_y\", \"#ffedbc\");\r\n        }\r\n        else if(TemperatureValue>=28&&TemperatureValue<=34.9){\r\n          document.documentElement.style.setProperty(\"--back_x\", \"#ff9966\");\r\n          document.documentElement.style.setProperty(\"--back_y\", \"#ff5e62\");\r\n        }\r\n        else if(TemperatureValue>=35){\r\n          document.documentElement.style.setProperty(\"--back_x\", \"#f12711\");\r\n          document.documentElement.style.setProperty(\"--back_y\", \"#f5af19\");\r\n        }\r\n    }\r\n\r\n    function handleAutocComplete(data){\r\n        setTempCityKey(data.Key)\r\n        setTempCities({})\r\n        setInputValue(data.LocalizedName+\", \"+data.Country.LocalizedName)\r\n        setTempSelectedCity(data)\r\n    }\r\n\r\n    function submitCity(e){\r\n        if(inputValue===''){\r\n            alert('No Input')\r\n            e.preventDefault()\r\n        }\r\n        else{\r\n            if(tempCityKey===undefined){\r\n                alert(\"Please select a City\")\r\n                e.preventDefault()\r\n            }\r\n            else{\r\n                props.UpdateResult(tempSelectedCity,tempCityKey);\r\n            }\r\n        }\r\n    }\r\n\r\n    function toggleFavorite(){\r\n        props.UpdateFavorites(props.City.Key)\r\n    }\r\n\r\n    function toggleTemperature(value){\r\n        if(props.TempUnit){\r\n            return value\r\n        }\r\n        else{\r\n            return (parseInt(value)*1.8+32)\r\n        }\r\n    }\r\n\r\n    function toggleTemperatureUnit(){\r\n        if(props.TempUnit){\r\n            return \"C\"\r\n        }\r\n        else{\r\n            return \"F\"\r\n        }\r\n    }\r\n\r\n    function checkFavorite(){\r\n        let index = props.favoriteCities.findIndex(object => object.selectedCity.Key === props.City.Key)\r\n        if(index>=0){\r\n            return <button onClick={toggleFavorite} className=\"Favorite-Button\">Remove from Favorites</button>\r\n        }\r\n        else{\r\n            return <button onClick={toggleFavorite} className=\"Favorite-Button\">Add to Favorites</button>\r\n        }\r\n    }\r\n\r\n    function show(){\r\n        if(props.fetch===\"\"){\r\n            handleBackgroundColor(undefined)\r\n            return <h2 className=\"Empty-Title\">Loading, please wait...</h2>\r\n        }\r\n        else if(props.fetch.status!==200){\r\n            handleBackgroundColor(undefined)\r\n            return <h2 className=\"Empty-Title\">{props.fetch.statusText}, Please come back later</h2>\r\n        }\r\n        else if(props.fetch.status===200){\r\n            handleBackgroundColor(props.CityCurrentData[0].Temperature.Metric.Value)\r\n            return <div className=\"Home-Result\">\r\n            <div className=\"Top\">\r\n                <div className=\"Favorite-Title\">\r\n                    <h1>{props.City.LocalizedName}</h1>\r\n                    <h2>{props.City.Country.LocalizedName}</h2>\r\n                    <p>At the moment: {toggleTemperature(props.CityCurrentData[0].Temperature.Metric.Value)+toggleTemperatureUnit()}</p>\r\n                </div>\r\n                <div className=\"Favorite-Toggle\">\r\n                    {checkFavorite()}\r\n                </div>\r\n            </div>\r\n            <div className=\"Center\">\r\n                <h1>Today's forecast - {props.CityCurrentData[0].WeatherText}</h1>\r\n            </div>\r\n            <div className=\"Bottom\">\r\n                <h3 className=\"Bottom-Title\">The Next days</h3>\r\n                <div className=\"Bottom-Days\">\r\n                    {props.City5DayCast.DailyForecasts.map( day =>{\r\n                        return <DayComp key={day.Date} self={day} TempUnit={props.TempUnit}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        }\r\n    }\r\n\r\n    function showAutoComplete(){\r\n        if(tempCities.length>0){\r\n            if((typeof tempCities)===\"object\"){\r\n                return <div className=\"Autocomplete-Box\">\r\n                {tempCities.map((data,index)=>{\r\n                    return <button onClick={()=>{handleAutocComplete(data)}}\r\n                        className=\"Autocomplete-Options\" \r\n                        key={\"city\"+index}>\r\n                        <h3>{data.LocalizedName}</h3>\r\n                        <h4>, {data.Country.LocalizedName}</h4>\r\n                        <h5>, {data.AdministrativeArea.LocalizedName}</h5>\r\n                    </button>\r\n                })}\r\n            </div>\r\n            }\r\n            else{\r\n                return <div className=\"Autocomplete-Box\">\r\n                    {tempCities}\r\n                </div>\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home-Page\">\r\n            <div className=\"Home-Search\">\r\n                <input onChange={getCitiesFromAPI} value={inputValue} type=\"text\" autoComplete=\"off\" placeholder=\"Search for a City\"/>\r\n                <button onClick={(e)=>{submitCity(e)}} className=\"Search-Button\">Submit</button>\r\n                {showAutoComplete()}\r\n            </div>\r\n            {show()}\r\n        </div>  \r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Favorites(props) {\r\n\r\n    function DateString(date){\r\n        const day = new Date(date)\r\n        return <p>{day.toDateString()}</p>\r\n    }\r\n    \r\n    function sendInfo(CityInfo){\r\n        props.SendCity(CityInfo)\r\n    }\r\n\r\n    function toggleTemperature(value){\r\n        if(props.TempUnit){\r\n            return value\r\n        }\r\n        else{\r\n            return (parseInt(value)*1.8+32)\r\n        }\r\n    }\r\n\r\n    function toggleTemperatureUnit(){\r\n        if(props.TempUnit){\r\n            return \"C\"\r\n        }\r\n        else{\r\n            return \"F\"\r\n        }\r\n    }\r\n\r\n    function checkFavorites(){\r\n        document.documentElement.style.setProperty(\"--back_x\", \"#b8b7b8\");\r\n        document.documentElement.style.setProperty(\"--back_y\", \"#eef2f3\");\r\n        if(props.cities.length===0){\r\n            return <h2 className=\"Empty-Title\">No Favorites Yet</h2>\r\n        }\r\n        else{\r\n            if(props.cities.length>0){\r\n                return <div className=\"Favorite-Page\"> \r\n                {props.cities.map(City =>{\r\n                    return <Link to=\"/\" onClick={()=>{sendInfo(City)}} key={City.selectedCity.Key}><div className=\"Daily\">\r\n                        <p className=\"Center Bigger\">{City.selectedCity.LocalizedName}</p>\r\n                        {DateString(City.cityData[0].LocalObservationDateTime)}\r\n                        <p>{toggleTemperature(City.cityData[0].Temperature.Metric.Value)+toggleTemperatureUnit()}</p>\r\n                    </div></Link>\r\n                })}\r\n            </div>\r\n            }\r\n            else{\r\n                return <h2 className=\"Empty-Title\">No Favorites Yet</h2>\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {checkFavorites()}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom'\nimport './App.css';\nimport MenuNav from './components/MenuNav';\nimport Home from './components/Home'\nimport Favorites from './components/Favorites';\nconst ApiKey = \"c1Ovp4IqKAag4Md99AAiQJlwAdHhNxmC\"\n\nfunction App() {\n  const [firstRender, setFirstRender] = useState(true)\n  const [fetchResult, setFetchResult] = useState(\"\")\n  const [cityData,setCityData]=useState(\"\")\n  const [cityForecastData,setCityForecastData]=useState(\"\")\n  const [isCelsuis,setIsCelsuis]=useState(true)\n  const [selectedCity,setSelectedCity]=useState({\n    Key: \"215854\",Type: \"City\",LocalizedName: \"Tel Aviv\",\n    Country: {ID: \"IL\", LocalizedName: \"Israel\"},AdministrativeArea: {ID: \"TA\", LocalizedName: \"Tel Aviv\"}\n  })\n  const [favorites,setFavorites]=useState([])\n  \n  function handleFirstRender() {\n    if (firstRender === true) {\n      getDefault()\n      setFirstRender(false)                \n    }\n  }\n\n  function handleBackgroundColor(TemperatureValue){\n    if(TemperatureValue<=0){\n      document.documentElement.style.setProperty(\"--back_x\", \"#acb6e5\");\n      document.documentElement.style.setProperty(\"--back_y\", \"#86fde8\");\n    }\n    else if(TemperatureValue>=0.1&&TemperatureValue<=19.9){\n      document.documentElement.style.setProperty(\"--back_x\", \"#83a4d4\");\n      document.documentElement.style.setProperty(\"--back_y\", \"#b6fbff\");\n    }\n    else if(TemperatureValue>=20&&TemperatureValue<=27.9){\n      document.documentElement.style.setProperty(\"--back_x\", \"#ed4264\");\n      document.documentElement.style.setProperty(\"--back_y\", \"#ffedbc\");\n    }\n    else if(TemperatureValue>=28&&TemperatureValue<=34.9){\n      document.documentElement.style.setProperty(\"--back_x\", \"#ff9966\");\n      document.documentElement.style.setProperty(\"--back_y\", \"#ff5e62\");\n    }\n    else if(TemperatureValue>=35){\n      document.documentElement.style.setProperty(\"--back_x\", \"#f12711\");\n      document.documentElement.style.setProperty(\"--back_y\", \"#f5af19\");\n    }\n  }\n\n  async function getSpecific(cityInfo,cityKey){\n    setFetchResult(\"\")\n    setSelectedCity(cityInfo)\n\n    const CityDataApi = await\n      fetch (`https://cors-anywhere.herokuapp.com/http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${ApiKey}`)\n    const CityCurrentData = await CityDataApi.json();\n    \n    const CityForecastApi = await\n      fetch (`https://cors-anywhere.herokuapp.com/http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${ApiKey}&language=en-us&details=true&metric=true`)\n    const CityForecast = await CityForecastApi.json();\n\n    if(CityDataApi.status===200&&CityForecastApi.status===200){\n      setCityData(CityCurrentData)\n      setCityForecastData(CityForecast)\n      handleBackgroundColor(CityCurrentData[0].Temperature.Metric.Value)\n      setFetchResult(CityForecastApi)\n    }\n    else{\n      setFetchResult(CityForecastApi)\n      console.error(CityForecast.Message)\n    }\n  }\n\n  async function getDefault(){\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async(position)=>{\n        const CityGeolocationApi = await \n          fetch (`https://cors-anywhere.herokuapp.com/http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${ApiKey}&q=${position.coords.latitude}%2C${position.coords.longitude}`)\n        const CityGeolocationAddress = await CityGeolocationApi.json();         \n        if(CityGeolocationApi.status===200){\n          getSpecific(CityGeolocationAddress, CityGeolocationAddress.Key)\n        }\n        else{\n          setFetchResult(CityGeolocationApi)\n          console.error(CityGeolocationAddress.Message)\n        }\n      }, showDefault);\n    }\n    else{\n      getSpecific(selectedCity, selectedCity.Key)\n    }\n\n    function showDefault(){\n      getSpecific(selectedCity, selectedCity.Key)\n    }\n  }\n\n  function UpdateFavoriteCities(CityAddressKey){\n    let index = favorites.findIndex(object => object.selectedCity.Key === CityAddressKey)\n    if(index>=0){\n      let temp = favorites.filter((value,i)=>(i!==index))\n        setFavorites(temp)\n      }\n    else{\n      setFavorites([{selectedCity,cityData},...favorites])\n    }\n  }\n  \n  function openFavoriteCity(FavoriteCity){\n    getSpecific(FavoriteCity.selectedCity, FavoriteCity.selectedCity.Key)\n  }\n\n  function handleTempValue(){\n    setIsCelsuis(!isCelsuis)\n  }\n\n  return (\n    <div className=\"App\" onLoad={handleFirstRender()}>\n    <Router>\n    <MenuNav UpdateTempValue={handleTempValue}/>\n    <Switch>\n      <Route exact path=\"/\" component={()=>{return <Home\n      City={selectedCity}\n      CityCurrentData={cityData}\n      City5DayCast={cityForecastData}\n      UpdateResult={getSpecific}\n      favoriteCities={favorites}\n      UpdateFavorites={UpdateFavoriteCities}\n      TempUnit={isCelsuis}\n      fetch={fetchResult}\n      />}}/>\n      <Route exact path=\"/favorites\" component={()=>{return <Favorites SendCity={openFavoriteCity} cities={favorites} TempUnit={isCelsuis}/>}}/>\n    </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}